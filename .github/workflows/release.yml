name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  linux64:
    name: Compile for Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.17
      - run: go mod download

      - name: compile
        run: |
          go build \
            -ldflags "-extldflags -static -X main.VERSION=${VERSION##*/v}" \
            -o dist/authn-linux64
        env:
          VERSION: ${{ github.ref }}
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 1

      - uses: actions/upload-artifact@v2
        with:
          name: authn-linux64
          path: dist/authn-linux64

  macos64:
    name: Compile for MacOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.17
      - run: go mod download

      - name: compile
        run: |
          go build \
            -ldflags "-X main.VERSION=${VERSION##*/v}" \
            -o dist/authn-macos64
        env:
          VERSION: ${{ github.ref }}
          GOOS: darwin
          GOARCH: amd64
          CGO_ENABLED: 1

      - uses: actions/upload-artifact@v2
        with:
          name: authn-macos64
          path: dist/authn-macos64

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [linux64, macos64]

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true

      - name: Upload Linux64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./authn-linux64/authn-linux64
          asset_name: authn-linux64
          asset_content_type: application/octet-stream

      - name: Upload Macos64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./authn-macos64/authn-macos64
          asset_name: authn-macos64
          asset_content_type: application/octet-stream

  register:
    name: Register on AWS ECR
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Get Dockerfile
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: authn-linux64

      - run: |
          chmod a+x authn-linux64

      - name: VERSION
        id: version
        run: |
          echo "::set-output name=number::${VERSION##*/v}"
        env:
          VERSION: ${{ github.ref }}

      - name: Push to AWS ECR
        uses: kciter/aws-ecr-action@v4
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: keratin_authn
          region: us-east-1
          tags: latest,${{ steps.version.outputs.number }}
